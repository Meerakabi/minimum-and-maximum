class TreeNode:
    def __init__(self, value=0, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right

def search_tree(root, target):
    # Base case: root is None or root's value matches the target
    if root is None:
        return None
    if root.value == target:
        return root

    # Recursively search in left and right subtrees
    left_result = search_tree(root.left, target)
    if left_result is not None:
        return left_result
    
    return search_tree(root.right, target)

# Example usage:
# Creating a sample binary tree
#       1
#      / \
#     2   3
#    / \
#   4   5
root = TreeNode(1, TreeNode(2, TreeNode(4), TreeNode(5)), TreeNode(3))

result = search_tree(root, 5)
if result:
    print("Node found with value:", result.value)
else:
    print("Node not found")
